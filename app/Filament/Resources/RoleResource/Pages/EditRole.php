<?php

namespace App\Filament\Resources\RoleResource\Pages;

use App\Filament\Resources\RoleResource;
use Filament\Forms\Components\TextInput;
use Filament\Resources\Form;
use Filament\Resources\Pages\EditRecord;
use Illuminate\Contracts\View\View;
use Spatie\Permission\Models\Permission;

class EditRole extends EditRecord
{
    protected static string $resource = RoleResource::class;

    public $permissions;
    public $permissionWithRole;
    public $toggle = array();
    public $recordPermissions;

    public function mount($record): void
    {
        parent::mount($record); // TODO: Change the autogenerated stub
        $this->toggle = $this->record->permissions->pluck('id')->toArray();
        $this->permissions = Permission::all();
        foreach ($this->permissions as $permission){
            try {
                $array = explode('-',$permission->name);
                $this->permissionWithRole[$array[1]][$permission->id] = $array[0];
            }catch (\Exception $e){
                $this->permissionWithRole[$permission->name][$permission->id] = $permission->name;
            }
        }
        $this->titleForm->fill(json_decode($this->record->getAttributes()['title'],true));
    }

    public function selectAll($key){
        foreach ($this->permissionWithRole[$key] as $id => $permission){
            if (!in_array($id,$this->toggle)) $this->toggle = array_merge($this->toggle,[$id]);
        }
    }

    protected function mutateFormDataBeforeSave(array $data): array
    {
        $this->record->syncPermissions($this->toggle);
        $data['title'] = $this->titleForm->getState();
        return parent::mutateFormDataBeforeSave($data); // TODO: Change the autogenerated stub
    }


    protected function form(Form $form): Form
    {
        return $form->schema([
            TextInput::make('name'),
            TextInput::make('guard_name')->disabled(),
        ]);
    }

    protected function getForms(): array
    {
        return array_merge(parent::getForms(),[
            'titleForm' => $this->makeForm()->schema([
                TextInput::make('uz')
                    ->required(config('app.main_locale') == 'uz'),
                TextInput::make('ru')
                    ->required(config('app.main_locale') == 'ru'),
                TextInput::make('en')
                    ->required(config('app.main_locale') == 'en'),
            ])
        ]);
    }

    public function render(): View
    {
        return \view('filament.resources.role-resource.edit')
            ->layout('filament::components.layouts.app',[
                'title' => self::$title,
                'breadcrumbs' => self::$breadcrumb
            ]);
    }
}
